{"version":3,"file":"static/js/100.ddea4f5f.chunk.js","mappings":"oHAEMA,E,SAAOC,EAAAA,KAAW,YAAwE,IAAtEC,EAAqE,EAArEA,eAAgBC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAE5EC,EAAY,CACjBC,QAAS,OACTP,eAAgBA,EAChBC,WAAYA,EACZE,IAAoB,kBAARA,EAAP,UAA6BA,EAA7B,MAAuCA,GAe7C,OAZID,IACHI,EAAUJ,cAAgBA,GAGvBE,IACHE,EAAUF,QAAUA,GAGjBC,IACHC,EAAUD,OAASA,IAGb,UAAIC,EACX,IAED,K,6OCqLA,UAvMoB,YAEDE,EAAAA,EAAAA,MAAf,IACMC,GAAYC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,WAAS,kBAAKJ,EAAUK,MAAMC,QAAtB,IAA8BC,UAAW,8BAAzE,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAmDA,OACI,iCACI,UAAC,IAAD,CAAMnB,WAAW,SAASoB,YAAY,EAAOC,UAAU,2BAAvD,WACI,SAAC,IAAD,CAAQC,KAAM,GAAIC,IAAKP,EAAKD,UAAWS,MAAM,SAAC,IAAD,OAC7C,iBAAKH,UAAU,oBAAf,WACI,SAAC,IAAD,CAAQI,SA5BA,SAAAC,GACpB,IAAMC,EAAM,YACa,cAArBD,EAAKE,KAAKC,OAIW,SAArBH,EAAKE,KAAKC,SACV,EAAKC,UAAUJ,EAAKE,KAAKG,eAAe,SAAAC,GAAQ,OAC5C,EAAKC,SAAS,CACVlB,UAAWiB,GAF6B,IAKhDE,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,YAAaR,IAAAA,EAAKS,SAAU,OATvDF,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,eAAgBR,IAAAA,EAAKS,SAAU,KAWjE,EAckDC,gBAAgB,EAAOC,OAtDnD,mDAsDP,UACI,SAAC,KAAD,CAAQC,KAAK,UAAb,8BAEJ,SAAC,KAAD,CAAQlB,UAAU,OAAOmB,QAflB,WACnBvB,EAAQ,CACJF,UAAW,IAElB,EAWe,2BAGR,gBAAKM,UAAU,OAAf,SACKH,GACG,SAAC,IAAD,CACIuB,KAAK,mBACLC,OAAO,WACPC,cACI,CACI,KAAQ3B,EAAKyB,KACb,MAASzB,EAAK4B,MACd,SAAY5B,EAAK6B,SACjB,YAAe7B,EAAK8B,MACpB,QAAW9B,EAAK+B,QAChB,QAAW/B,EAAKgC,QAChB,KAAQhC,EAAKiC,MAIrBC,SA5EH,SAAAC,GACb,IAAMxB,EAAM,YACZO,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,cAAeR,IAAAA,IAC1CyB,YAAW,WACPnC,EAAQ,CACJwB,KAAMU,EAAOV,KACbG,MAAOO,EAAOP,MACdC,SAAUM,EAAON,SACjBQ,YAAaF,EAAOE,YACpBC,YAAaH,EAAOG,YACpBP,QAASI,EAAOJ,QAChBC,QAASG,EAAOH,QAChBC,KAAME,EAAOF,KACbM,SAAUJ,EAAOI,WAErBrB,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,QAASR,IAAAA,EAAKS,SAAU,IACnDjB,GAAa,GACbT,EAAS,0BACZ,GAAE,IACN,EA0DmB8C,eAxDG,SAAAC,GACnBC,QAAQC,IAAI,UAAWF,EAC1B,EAsCe,UAkBI,SAAC,IAAD,WACI,UAAC,IAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,WACI,UAAC,IAAD,CAAKC,OAAQC,EAAAA,GAAb,WACI,SAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,OACNzB,KAAK,OACL0B,MAAO,CACH,CACIC,UAAU,EACVlC,QAAS,4BANrB,UAUI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAK0B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,WACNzB,KAAK,WACL0B,MAAO,CACH,CACIC,UAAU,EACVlC,QAAS,gCANrB,UAUI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAK0B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,QACNzB,KAAK,QACL0B,MAAO,CAAC,CACJC,UAAU,EACV7B,KAAM,QACNL,QAAS,gCANjB,UASI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAK0B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,gBACNzB,KAAK,cAFT,UAII,SAAC,IAAD,CAAYpB,UAAU,eAG9B,SAAC,IAAD,CAAKuC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,eACNzB,KAAK,cAFT,UAII,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,UACNzB,KAAK,UAFT,UAII,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,UACNzB,KAAK,UAFT,UAII,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,OACNzB,KAAK,OAFT,UAII,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKmB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,YACNzB,KAAK,WAFT,UAII,SAAC,IAAD,YAIZ,SAAC,KAAD,CAAQF,KAAK,UAAU8B,SAAS,SAAhC,iCAOZ,gBAAKhD,UAAU,iBAAiBiD,MAAO,CAAEhE,QAAS,OAAQP,eAAgB,SAAUC,WAAY,UAAhG,UACI,SAAC,IAAD,CAAMsB,KAAK,gBAOlC,C","sources":["components/shared-components/Flex/index.js","views/app-views/dashboards/setting/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { Component, useEffect } from 'react';\r\nimport { Form, Avatar, Button, Input, DatePicker, Row, Col, message, Upload, Spin } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { useState } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst EditProfile = () => {\r\n\r\n    const params = useParams()\r\n    const propsUser = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const [user, setUser] = useState({ ...propsUser.state.record, avatarUrl: '/img/avatars/thumb-6.jpg'})\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    \r\n    const avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n    const onFinish = values => {\r\n        const key = 'updatable';\r\n        message.loading({ content: 'Updating...', key });\r\n        setTimeout(() => {\r\n            setUser({\r\n                name: values.name,\r\n                email: values.email,\r\n                userName: values.userName,\r\n                dateOfBirth: values.dateOfBirth,\r\n                phoneNumber: values.phoneNumber,\r\n                website: values.website,\r\n                address: values.address,\r\n                city: values.city,\r\n                postcode: values.postcode,\r\n            })\r\n            message.success({ content: 'Done!', key, duration: 2 });\r\n            setIsLoading(false)\r\n            navigate('/app/dashboards/default')\r\n        }, 2000);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onUploadAavater = info => {\r\n        const key = 'updatable';\r\n        if (info.file.status === 'uploading') {\r\n            message.loading({ content: 'Uploading...', key, duration: 1000 });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            this.getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    avatarUrl: imageUrl,\r\n                }),\r\n            );\r\n            message.success({ content: 'Uploaded!', key, duration: 1.5 });\r\n        }\r\n    };\r\n\r\n    const onRemoveAvater = () => {\r\n        setUser({\r\n            avatarUrl: ''\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n                <Avatar size={90} src={user.avatarUrl} icon={<UserOutlined />} />\r\n                <div className=\"ml-3 mt-md-0 mt-3\">\r\n                    <Upload onChange={onUploadAavater} showUploadList={false} action={avatarEndpoint}>\r\n                        <Button type=\"primary\">Change Avatar</Button>\r\n                    </Upload>\r\n                    <Button className=\"ml-2\" onClick={onRemoveAvater}>Remove</Button>\r\n                </div>\r\n            </Flex>\r\n            <div className=\"mt-4\">\r\n                {isLoading ?\r\n                    <Form\r\n                        name=\"basicInformation\"\r\n                        layout=\"vertical\"\r\n                        initialValues={\r\n                            {\r\n                                'name': user.name,\r\n                                'email': user.email,\r\n                                'username': user.userName,\r\n                                'phoneNumber': user.phone,\r\n                                'website': user.website,\r\n                                'address': user.address,\r\n                                'city': user.city,\r\n                            }\r\n                        }\r\n                        \r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your name!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your username!'\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[{\r\n                                                required: true,\r\n                                                type: 'email',\r\n                                                message: 'Please enter a valid email!'\r\n                                            }]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Date of Birth\"\r\n                                            name=\"dateOfBirth\"\r\n                                        >\r\n                                            <DatePicker className=\"w-100\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Phone Number\"\r\n                                            name=\"phoneNumber\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Website\"\r\n                                            name=\"website\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24}>\r\n                                        <Form.Item\r\n                                            label=\"Address\"\r\n                                            name=\"address\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"City\"\r\n                                            name=\"city\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Post code\"\r\n                                            name=\"postcode\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Save Change\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    :\r\n                    <div className='spin-container' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Spin size='large' />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditProfile"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","useParams","propsUser","useLocation","navigate","useNavigate","useState","state","record","avatarUrl","user","setUser","isLoading","setIsLoading","mobileFlex","className","size","src","icon","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","message","content","duration","showUploadList","action","type","onClick","name","layout","initialValues","email","userName","phone","website","address","city","onFinish","values","setTimeout","dateOfBirth","phoneNumber","postcode","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","label","rules","required","htmlType","style"],"sourceRoot":""}