{"version":3,"file":"static/js/32.469afeef.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { DashboardOutlined } from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: 'dashboards-default',\r\n      path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n      title: 'sidenav.dashboard.default',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-setting',\r\n      path: `${APP_PREFIX_PATH}/dashboards/setting/1`,\r\n      title: 'Setting',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-2D',\r\n      path: `${APP_PREFIX_PATH}/dashboards/planner`,\r\n      title: 'Планировщик',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderInlineEnd: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport MenuContent from './MenuContent';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, GRAY_SCALE, DARK_MODE } from \"constants/ThemeConstant\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, currentTheme }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      css={css`\r\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px); \r\n        position: fixed !important;\r\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n        box-shadow: 0 1px 4px -1px rgba(0,0,0,.15);\r\n        z-index: 999;\r\n        direction: ltr;\r\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${GRAY_SCALE.WHITE} !important;`  : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\r\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${DARK_MODE.BG_COLOR} !important`  : ``}\r\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`  : ``}\r\n      `}\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, currentTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst LogoWrapper = styled.div(() => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tpadding: '0 1rem',\r\n\tbackgroundColor: 'transparent',\r\n\ttransition: 'all .2s ease',\r\n}));\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-sm-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/logo-sm.png'\r\n\t\t}\r\n\t\treturn '/img/logo.png'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`}/>\r\n\t\t</LogoWrapper>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t\twidth={300}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"px-3\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"h-100\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import styled from '@emotion/styled';\r\nimport { \r\n    GRAY_SCALE,\r\n} from 'constants/ThemeConstant'\r\nimport { baseTheme, rgba } from 'configs/ThemeConfig'\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant'\r\n\r\nconst isDark = (mode) => {\r\n    return mode === 'dark'\r\n}\r\n\r\nconst NavItem = styled('div')`\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tpadding: 0 0.75rem;\r\n\t}\r\n\r\n    .ant-badge {\r\n        color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n    }\r\n\r\n    .nav-icon {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    &:hover,\r\n    &.ant-dropdown-open,\r\n    &.ant-popover-open {\r\n        > * {\r\n            color: ${props => isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE};\r\n        }\r\n\r\n        .profile-text {\r\n            color: ${props => isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE};\r\n        }\r\n    }\r\n`\r\n\r\nexport default NavItem","import React from 'react';\r\nimport { Dropdown, Avatar } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n\tEditOutlined, \r\n\tSettingOutlined, \r\n\tShopOutlined, \r\n\tQuestionCircleOutlined, \r\n\tLogoutOutlined \r\n} from '@ant-design/icons';\r\nimport NavItem from './NavItem';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport styled from '@emotion/styled';\r\nimport { FONT_WEIGHT, MEDIA_QUERIES, SPACER, FONT_SIZES } from 'constants/ThemeConstant'\r\n\r\nconst Icon = styled.div(() => ({\r\n\tfontSize: FONT_SIZES.LG\r\n}))\r\n\r\nconst Profile = styled.div(() => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center'\r\n}))\r\n\r\nconst UserInfo = styled('div')`\r\n\tpadding-left: ${SPACER[2]};\r\n\r\n\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tdisplay: none\r\n\t}\r\n`\r\n\r\nconst Name = styled.div(() => ({\r\n\tfontWeight: FONT_WEIGHT.SEMIBOLD\r\n}))\r\n\r\nconst Title = styled.span(() => ({\r\n\topacity: 0.8\r\n}))\r\n\r\n// const MenuItem = (props) => (\r\n// \t<Flex as=\"a\" href={props.path} alignItems=\"center\" gap={SPACER[2]}>\r\n// \t\t<Icon>{props.icon}</Icon>\r\n// \t\t<span>{props.label}</span>\r\n// \t</Flex>\r\n// )\r\n\r\nconst MenuItemSignOut = (props) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div onClick={handleSignOut}>\r\n\t\t\t<Flex alignItems=\"center\" gap={SPACER[2]} >\r\n\t\t\t\t<Icon>\r\n\t\t\t\t\t<LogoutOutlined />\r\n\t\t\t\t</Icon>\r\n\t\t\t\t<span>{props.label}</span>\r\n\t\t\t</Flex>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'Sign Out',\r\n\t\tlabel: <MenuItemSignOut label=\"Sign Out\" />,\r\n\t}\r\n]\r\n\r\nexport const NavProfile = ({mode}) => {\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t<NavItem mode={mode}>\r\n\t\t\t\t<Profile>\r\n\t\t\t\t\t<Avatar src=\"/img/avatars/thumb-1.jpg\" />\r\n\t\t\t\t\t<UserInfo className=\"profile-text\">\r\n\t\t\t\t\t\t<Name>Charlie Howard</Name>\r\n\t\t\t\t\t\t<Title>Frontend Developer</Title>\r\n\t\t\t\t\t</UserInfo>\r\n\t\t\t\t</Profile>\r\n\t\t\t</NavItem>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","/** @jsxImportSource @emotion/react */\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport NavItem from './NavItem'\r\nimport lang from 'assets/data/language.data.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onLocaleChange } from 'store/slices/themeSlice';\r\nimport i18n from 'i18next'\r\nimport { SPACER } from 'constants/ThemeConstant';\r\nimport { baseTheme } from 'configs/ThemeConfig';\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { css } from '@emotion/react';\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n\r\n\tconst locale = useSelector(state => state.theme.locale)\r\n\r\n\tconst language = getLanguageDetail(locale);\r\n\tconst {langName, icon} = language;\r\n\r\n\treturn (\r\n\t\t<Flex alignItems=\"center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</Flex>\r\n\t)\r\n}\r\n\r\n\r\nconst MenuItem = (props) => {\r\n\tconst locale = useSelector(state => state.theme.locale);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLocaleChange = (langId) => {\r\n\t\tdispatch(onLocaleChange(langId))\r\n\t\ti18n.changeLanguage(langId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span>\r\n\t\t\t<Flex \r\n\t\t\t\talignItems=\"center\" \r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\tgap={SPACER[4]}\r\n\t\t\t\tonClick={() => handleLocaleChange(props.langId)}\r\n\t\t\t>\r\n\t\t\t\t<Flex alignItems=\"center\" gap={SPACER[2]}>\r\n\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${props.icon}.png`} alt={props.langName}/>\r\n\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t{locale === props.langId ? <CheckOutlined css={css`color: ${baseTheme.colorSuccess}`} /> : null}\r\n\t\t\t</Flex>\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'En',\r\n\t\tlabel: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Ch',\r\n\t\tlabel: <MenuItem icon=\"cn\" langName=\"Chinese\" langId=\"zh\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Fr',\r\n\t\tlabel: <MenuItem icon=\"fr\" langName=\"French\" langId=\"fr\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Jp',\r\n\t\tlabel: <MenuItem icon=\"jp\" langName=\"Janpanese\" langId=\"ja\" />\r\n\t}\r\n];\r\n\r\n\r\nexport const NavLanguage = ({ configDisplay, mode }) => {\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<NavItem mode={mode}>\r\n\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavLanguage;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { BODY_BACKGROUND, GRAY_SCALE, DARK_MODE } from 'constants/ThemeConstant'\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst SearchResultIcon = styled.div(() => ({\r\n\tfontSize: '1.5rem',\r\n\tmarginRight: '1rem'\r\n}));\r\n\r\nconst SearchResultTitle = styled.div(({mode}) => ({\r\n\tcolor: mode === 'light' ? DARK_MODE.HEADING_COLOR : GRAY_SCALE.GRAY_DARK,\r\n\tfontWeight: '500'\r\n}));\r\n\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = (mode) => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<Flex alignItems=\"center\" padding=\"7px 12px\">\r\n\t\t\t\t\t<SearchResultIcon>\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</SearchResultIcon>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SearchResultTitle mode={mode}>\r\n\t\t\t\t\t\t\t<IntlMessage id={item.title} />\r\n\t\t\t\t\t\t</SearchResultTitle>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(mode))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tcss={css`\r\n\t\t\t\t${!isMobile ? `\r\n\t\t\t\t\tmin-width: 300px;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\r\n\t\t\t\t\t.ant-input-affix-wrapper {\r\n\t\t\t\t\t\tbackground-color: ${mode === 'light' ? '#1b2531' : BODY_BACKGROUND};\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input {\r\n\t\t\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input-prefix {\r\n\t\t\t\t\t\t\tcolor: ${GRAY_SCALE.GRAY_LIGHT};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t` : ''}\r\n\t\t\t`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport styled from '@emotion/styled';\r\nimport SearchInput from './SearchInput';\r\nimport { TEMPLATE, FONT_SIZES } from 'constants/ThemeConstant';\r\n\r\nconst SeachWrapper = styled.div(({active, mode, headerBg}) => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n    padding: '0 1.5rem',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: headerBg,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontSize: FONT_SIZES.LG,\r\n    top: active ? 0 : -TEMPLATE.HEADER_HEIGHT,\r\n    transition: 'all 0.3s ease'\r\n}))\r\n\r\nconst NavItem = styled('div')`\r\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\tpadding: 0 1.5rem;\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\tbackground-color: ${ props => props.headerBg };\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tfont-size: ${FONT_SIZES.LG};\r\n\ttop: ${props => props.active ? 0 : -TEMPLATE.HEADER_HEIGHT};\r\n\ttransition: all 0.3s ease;\r\n\r\n\t${props => props.mode === 'light' ? `\r\n\t\t.ant-select-selection-search-input {\r\n\t\t\tcolor: @white;\r\n\t\t}\r\n\r\n\t\t.ant-select-selection-placeholder {\r\n\t\t\tcolor: rgba(@white, 0.85);\r\n\t\t}\r\n\t` : ''}\r\n`\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor, currentTheme, mode } = props\r\n\r\n\tconst headerBgBase = currentTheme === 'dark' ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\t\r\n\treturn (\r\n\t\t<SeachWrapper active={active} mode={mode} headerBg={headerNavColor || headerBgBase}>\r\n\t\t\t<SearchInput close={close} active={active} mode={mode}/>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</SeachWrapper>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst Header = styled.div(({headerNavColor, isDarkTheme}) => ({\r\n\tposition: 'fixed',\r\n\twidth: '100%',\r\n\tleft: 0,\r\n\tzIndex: 1000,\r\n\tdisplay: 'flex',\r\n\tflex: '0 0 auto',\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tlineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\r\n\tbackgroundColor: headerNavColor,\r\n\tboxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)'\r\n}))\r\n\r\n\r\nexport default Header","import styled from '@emotion/styled';\r\n\r\nconst HeaderWrapper = styled.div(({isNavTop}) => ({\r\n\twidth: '100%',\r\n\tdisplay: 'flex',\r\n\t...isNavTop ? {maxWidth: isNavTop, margin: 'auto'} : {}\r\n}))\r\n\r\n\r\nexport default HeaderWrapper","import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.div(({navWidth}) => ({\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'space-between',\r\n\tposition: 'relative',\r\n\ttransition: 'all .2s ease',\r\n\twidth: `calc(100% - ${navWidth})`\r\n}))\r\n\r\nexport default Nav","import styled from '@emotion/styled';\r\n\r\nconst NavEdge = styled.div(({left, right}) => {\r\n\r\n\tif (left) {\r\n\t\treturn {\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\tif (right) {\r\n\t\treturn {\r\n\t\t\tmarginLeft: 'auto',\r\n\t\t\tpadding: '0 1rem',\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\treturn {}\r\n})\r\n\r\nexport default NavEdge","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from '../Logo';\r\nimport NavNotification from '../NavNotification';\r\nimport NavProfile from '../NavProfile';\r\nimport NavLanguage from '../NavLanguage';\r\nimport NavPanel from '../NavPanel';\r\nimport NavSearch  from '../NavSearch';\r\nimport SearchInput from '../NavSearch/SearchInput';\r\nimport Header from './Header';\r\nimport HeaderWrapper from './HeaderWrapper';\r\nimport Nav from './Nav'\r\nimport NavEdge from './NavEdge';\r\nimport NavItem from '../NavItem';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP \r\n\tconst isDarkTheme = currentTheme === 'dark'\r\n\r\n    const navMode = useMemo(() => {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}, [isDarkTheme, headerNavColor])\r\n\r\n\tconst navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\treturn (\r\n\t\t<Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\r\n\t\t\t<HeaderWrapper isNavTop={isNavTop}>\r\n\t\t\t\t<Logo logoType={navMode}/>\r\n\t\t\t\t<Nav navWidth={getNavWidth()}>\r\n\t\t\t\t\t<NavEdge left>\r\n\t\t\t\t\t\t<NavItem onClick={onToggle} mode={navMode}>\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t\t<NavEdge right>\r\n\t\t\t\t\t\t<NavProfile mode={navMode} />\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t</Nav>\r\n\t\t\t</HeaderWrapper>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst breadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn {\r\n\t\t\ttitle: <Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t}\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb items={breadcrumbItems} />\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","/** @jsxImportSource @emotion/react */\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport { css } from '@emotion/react';\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div\r\n\t\t\t\tcss={css`\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-bottom: 1rem;\r\n\r\n\t\t\t\t\t@media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t}\r\n\t\t\t\t`}\r\n\t\t\t>\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from 'constants/ThemeConstant'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Footer() {\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<footer css={css`\r\n\t\t\theight: ${TEMPLATE.FOOTER_HEIGHT}px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n\t\t\talign-items: center;\r\n\t\t\tborder-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR };\r\n\t\t\tjustify-content: space-between;\r\n\t\t\r\n\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\t\t\tjustify-content: center;\r\n       \t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n    margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n    min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n    position: relative;\r\n\r\n    ${props => props.isNavTop ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    ` : '' }\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} { \r\n        padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n    }\r\n`\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE\r\n    const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === TEMPLATE.DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === TEMPLATE.DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout>\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout style={getLayoutDirectionGutter()}>\r\n                    <AppContent>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content className=\"h-100\">\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </AppContent>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","dashBoardNavTree","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","submenu","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","setDefaultOpen","keyList","keyString","arr","index","elm","MenuItem","dispatch","useDispatch","isMobile","utils","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","SIDE_NAV_DARK","GRAY_SCALE","DARK_MODE","width","SIDE_NAV_WIDTH","collapsed","autoHide","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","ArrowLeftOutlined","isDark","MEDIA_QUERIES","baseTheme","fontSize","FONT_SIZES","Profile","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","Title","opacity","MenuItemSignOut","signOut","LogoutOutlined","menu","trigger","locale","langId","onLocaleChange","i18n","maxWidth","langName","CheckOutlined","SearchResultIcon","marginRight","SearchResultTitle","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","active","close","useState","setValue","options","setOptions","inputRef","useRef","current","focus","ref","BODY_BACKGROUND","popupClassName","onSelect","onSearch","searchResult","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","SeachWrapper","headerBg","position","top","headerNavColor","headerBgBase","CloseOutlined","isDarkTheme","left","zIndex","flex","lineHeight","boxShadow","navWidth","right","marginLeft","setSearchActive","direction","navMode","navBgColor","useEffect","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","useLocation","pathname","breadcrumbItems","_","url","slice","AppBreadcrumb","Footer","BORDER","Date","getFullYear","href","e","preventDefault","Content","AppContent","AppLayout","location","currentRouteInfo","isNavSide","getLayoutGutter","paddingLeft","paddingRight","Suspense","Loading","cover"],"sourceRoot":""}