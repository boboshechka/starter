{"version":3,"file":"static/js/612.85da6726.chunk.js","mappings":"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","sources":["views/app-views/dashboards/default/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/dashboards/default/index.js"],"sourcesContent":["import { Avatar, Drawer, Divider } from 'antd';\r\nimport {\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    InstagramOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserView = ({ data, visible, close }) => {\r\n    if(data){\r\n        return (\r\n            <Drawer\r\n                width={300}\r\n                placement=\"right\"\r\n                onClose={close}\r\n                closable={false}\r\n                open={visible}\r\n\r\n            >\r\n                <div className=\"text-center mt-3\">\r\n                    <Link to={`/app/dashboards/setting/${data.id}`}>\r\n                        <Avatar size={80} />\r\n                        <h3 className=\"mt-2 mb-0\">{data.name ? data.name : 'Не вставляются данные'}</h3>\r\n                        <span className=\"text-muted\">{data.username}</span>\r\n                    </Link>\r\n                </div>\r\n                <Divider dashed />\r\n                <div className=\"\">\r\n                    <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n                    <p>\r\n                        <UserOutlined />\r\n                        <span className=\"ml-3 text-dark\">id: {data.id}</span>\r\n                    </p>\r\n                    <p>\r\n                        <CalendarOutlined />\r\n                        <span className=\"ml-3 text-dark\">Born in {data.email}</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n                    <p>\r\n                        <MobileOutlined />\r\n                        <span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n                    </p>\r\n                    <p>\r\n                        <MailOutlined />\r\n                        <span className=\"ml-3 text-dark\">{data?.email ? data?.email : '-'}</span>\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserView","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import { Card, Table, Tag, Tooltip, message, Button, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport UserView from './UserView';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const DefaultDashboard = () => {\r\n  const [dataFromJson, setDataFromJson] = useState(null)\r\n  const [userProfileVisible, setUserProfileVisible] = useState(false)\r\n  const [selectedUser, setSelectedUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n\r\n        setTimeout(() => {\r\n          setDataFromJson(users)\r\n        }, 1000)\r\n\r\n      })\r\n\r\n  }, [])\r\n\r\n  function showUserProfile(userInfo) {\r\n    setUserProfileVisible(true)\r\n    setSelectedUser(userInfo)\r\n  }\r\n\r\n  function closeUserProfile() {\r\n    setUserProfileVisible(false)\r\n    setSelectedUser(null)\r\n  }\r\n\r\n  function deleteUser(userId) {\r\n    setDataFromJson(state => state.filter(item => item.id !== userId))\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n  }\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: 'User',\r\n      dataIndex: 'name',\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <Link to={`/app/dashboards/setting/${record.id}`} state={{ record }}>\r\n            <AvatarStatus src={record.img} name={record.name} subTitle={record.email} />\r\n          </Link>\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.name.toLowerCase();\r\n          b = b.name.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n      render: phone => (\r\n        <div>{phone}</div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => a.phone.length - b.phone.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Website',\r\n      dataIndex: 'website',\r\n      render: website => (\r\n        // <Tag className=\"text-capitalize\" color={status === 'active' ? 'cyan' : 'red'}>{status}</Tag>\r\n        <div>{website}</div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => a.status.length - b.status.length,\r\n      },\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'actions',\r\n      render: (_, elm) => (\r\n        <div className=\"text-right d-flex justify-content-end\">\r\n          <Tooltip title=\"View\">\r\n            <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined />} onClick={() => { showUserProfile(elm) }} size=\"small\" />\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <Button danger icon={<DeleteOutlined />} onClick={() => { deleteUser(elm.id) }} size=\"small\" />\r\n          </Tooltip>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <div className=\"table-responsive\">\r\n          <Table columns={tableColumns} dataSource={dataFromJson} rowKey='id' />\r\n        </div>\r\n        {dataFromJson\r\n          ?\r\n          <UserView data={selectedUser} visible={userProfileVisible} close={closeUserProfile} />\r\n          :\r\n          <div className='spin-container' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spin size='large' />\r\n          </div>\r\n        }\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DefaultDashboard;"],"names":["data","visible","close","width","placement","onClose","closable","open","className","to","id","size","name","username","dashed","UserOutlined","CalendarOutlined","email","MobileOutlined","phone","MailOutlined","renderAvatar","props","type","text","suffix","subTitle","src","icon","shape","gap","onNameClick","onClick","DefaultDashboard","useState","dataFromJson","setDataFromJson","userProfileVisible","setUserProfileVisible","selectedUser","setSelectedUser","useEffect","fetch","then","response","json","users","setTimeout","tableColumns","title","dataIndex","render","_","record","state","img","sorter","compare","a","b","toLowerCase","length","website","status","elm","EyeOutlined","userInfo","danger","DeleteOutlined","userId","filter","item","message","content","duration","columns","dataSource","rowKey","style","display","justifyContent","alignItems"],"sourceRoot":""}